name: CD Pipeline on AWS EC2

on:
  pull_request:
    types: [closed]
  push:
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
          cd test_project_38_setup &&
          git pull origin main &&
          
          # Activate virtual environment (create if not exists)
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv_test_project_38_setup/bin/activate
          
          # Install or upgrade pip
          pip install --upgrade pip
          
          # Install requirements
          pip install -r requirements.txt
          
          # Run migrations
          python manage.py migrate
          
          # Collect static files
          python manage.py collectstatic --noinput
          
          # Deactivate virtual environment
          deactivate
          
          # Reload systemd, restart Gunicorn and Nginx
          sudo systemctl daemon-reload
          sudo systemctl restart gunicorn_test_project_38_setup
          sudo systemctl restart nginx
          
          # Restart Celery if you are using it
          if systemctl is-active --quiet celery_test_project_38_setup; then
            sudo systemctl restart celery_test_project_38_setup
          fi
          
          if systemctl is-active --quiet celerybeat_test_project_38_setup; then
            sudo systemctl restart celerybeat_test_project_38_setup
          fi
        '
